// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transfer.proto

package transfer

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type TransferRequest struct {
	ToID                 int64    `protobuf:"varint,1,opt,name=toID,proto3" json:"toID,omitempty"`
	FromID               int64    `protobuf:"varint,2,opt,name=fromID,proto3" json:"fromID,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferRequest) Reset()         { *m = TransferRequest{} }
func (m *TransferRequest) String() string { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()    {}
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96c3e6bcafb460d3, []int{0}
}
func (m *TransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRequest.Unmarshal(m, b)
}
func (m *TransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRequest.Marshal(b, m, deterministic)
}
func (m *TransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRequest.Merge(m, src)
}
func (m *TransferRequest) XXX_Size() int {
	return xxx_messageInfo_TransferRequest.Size(m)
}
func (m *TransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRequest proto.InternalMessageInfo

func (m *TransferRequest) GetToID() int64 {
	if m != nil {
		return m.ToID
	}
	return 0
}

func (m *TransferRequest) GetFromID() int64 {
	if m != nil {
		return m.FromID
	}
	return 0
}

func (m *TransferRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type TransferResponse struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferResponse) Reset()         { *m = TransferResponse{} }
func (m *TransferResponse) String() string { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()    {}
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96c3e6bcafb460d3, []int{1}
}
func (m *TransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResponse.Unmarshal(m, b)
}
func (m *TransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResponse.Marshal(b, m, deterministic)
}
func (m *TransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResponse.Merge(m, src)
}
func (m *TransferResponse) XXX_Size() int {
	return xxx_messageInfo_TransferResponse.Size(m)
}
func (m *TransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResponse proto.InternalMessageInfo

func (m *TransferResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TransferResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*TransferRequest)(nil), "transfer.TransferRequest")
	proto.RegisterType((*TransferResponse)(nil), "transfer.TransferResponse")
}

func init() { proto.RegisterFile("transfer.proto", fileDescriptor_96c3e6bcafb460d3) }

var fileDescriptor_96c3e6bcafb460d3 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x42,
	0xb9, 0xf8, 0x43, 0xa0, 0xec, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x21, 0x2e, 0x96,
	0x92, 0x7c, 0x4f, 0x17, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x30, 0x5b, 0x48, 0x8c, 0x8b,
	0x2d, 0xad, 0x28, 0x3f, 0xd7, 0xd3, 0x45, 0x82, 0x09, 0x2c, 0x0a, 0xe5, 0x81, 0xc4, 0x13, 0x73,
	0xf3, 0x4b, 0xf3, 0x4a, 0x24, 0x98, 0x21, 0xe2, 0x10, 0x9e, 0x92, 0x03, 0x97, 0x00, 0xc2, 0xd8,
	0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x90, 0xb9, 0xc9, 0xf9, 0x29, 0xa9, 0x30, 0x73, 0x41, 0x6c,
	0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0xb0, 0xc1, 0x9c, 0x41, 0x30,
	0xae, 0x51, 0x1c, 0x97, 0x08, 0xcc, 0x84, 0x80, 0xfc, 0xcc, 0xbc, 0x92, 0xe0, 0xd4, 0xa2, 0xb2,
	0xcc, 0xe4, 0x54, 0x21, 0x37, 0x2e, 0x5e, 0x14, 0x71, 0x21, 0x49, 0x3d, 0xb8, 0xe7, 0xd0, 0x7c,
	0x22, 0x25, 0x85, 0x4d, 0x0a, 0xe2, 0x9a, 0x24, 0x36, 0x70, 0x48, 0x18, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xdc, 0x29, 0x5e, 0xfe, 0x1b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransferPointServiceClient is the client API for TransferPointService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransferPointServiceClient interface {
	TransferPoint(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferResponse, error)
}

type transferPointServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransferPointServiceClient(cc *grpc.ClientConn) TransferPointServiceClient {
	return &transferPointServiceClient{cc}
}

func (c *transferPointServiceClient) TransferPoint(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferResponse, error) {
	out := new(TransferResponse)
	err := c.cc.Invoke(ctx, "/transfer.TransferPointService/TransferPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransferPointServiceServer is the server API for TransferPointService service.
type TransferPointServiceServer interface {
	TransferPoint(context.Context, *TransferRequest) (*TransferResponse, error)
}

// UnimplementedTransferPointServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTransferPointServiceServer struct {
}

func (*UnimplementedTransferPointServiceServer) TransferPoint(ctx context.Context, req *TransferRequest) (*TransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferPoint not implemented")
}

func RegisterTransferPointServiceServer(s *grpc.Server, srv TransferPointServiceServer) {
	s.RegisterService(&_TransferPointService_serviceDesc, srv)
}

func _TransferPointService_TransferPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransferPointServiceServer).TransferPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.TransferPointService/TransferPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransferPointServiceServer).TransferPoint(ctx, req.(*TransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransferPointService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transfer.TransferPointService",
	HandlerType: (*TransferPointServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TransferPoint",
			Handler:    _TransferPointService_TransferPoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transfer.proto",
}
